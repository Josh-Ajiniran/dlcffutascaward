# Generated by Django 2.2 on 2018-09-01 09:07

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=25)),
                ('firstname', models.CharField(max_length=25)),
                ('othername', models.CharField(blank=True, max_length=25, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('phone_number', models.CharField(max_length=11, unique=True)),
                ('address', models.CharField(max_length=100, verbose_name='Hostel/Lodge Address')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('school', models.CharField(choices=[('SAAT', 'Sch. of Agric. & Agric. Tech.'), ('SCOM', 'Sch. of Computing.'), ('SEET', 'Sch. of Engr. & Engr. Tech.'), ('SEMS', 'Sch. of Earth & Mineral Science.'), ('SET', 'Sch. of Environmental Tech.'), ('SHHT', 'Sch. of Health & Health Tech.'), ('SMAT', 'Sch of Management Tech.'), ('SOS', 'Sch. of Science')], max_length=50)),
                ('department', models.CharField(choices=[('AEC', 'Agric. Extension & Communication'), ('APH', 'Animal Production & Health'), ('ARE', 'Agric. Resource Economics'), ('CSP', 'Crop, Soil & Pest Mgt.'), ('EWM', 'Ecotourism & Wildlife Mgt'), ('FST', 'Food Sci. & Tech'), ('FWT', 'Forestry & Wood Tech.'), ('CSC', 'Computer Sci.'), ('CSS', 'Cyber Security'), ('IFS', 'Information Sci.'), ('IFT', 'Information Tech.'), ('SFE', 'Software Engr.'), ('AGE', 'Agric. & Environ. Engr.'), ('CPE', 'Computer Engr.'), ('CVE', 'Civil & Environ. Engr.'), ('IPE', 'Industrial Prod. Engr.'), ('EEE', 'Elect & Electronics Engr.'), ('MEE', 'Mechanical Engr.'), ('MME', 'Met & Mat Engr.'), ('MNE', 'Mining Engr.'), ('AGP', 'Applied Geophysics'), ('AGY', 'Applied Geology'), ('MET', 'Meteorology'), ('MST', 'Marine Sci. & Tech.'), ('RSG', 'Remote Sensing & Geoinformatics'), ('ARC', 'Architecture'), ('BDG', 'Building'), ('ESM', 'Estate Management'), ('IDD', 'Industrial Design'), ('QSV', 'Quantity Surveying'), ('SVG', 'Surveying & Geoinformatics.'), ('URP', 'Urban & Regional Planning'), ('ANA', 'Anatomy'), ('BMT', 'Biomedical Technology'), ('PHY', 'Physiology'), ('ACC', 'Accounting'), ('BUS', 'Business Admin'), ('ECO', 'Economics'), ('EMT', 'Entrepreneurship Mgt. Tech.'), ('PMT', 'Project Mgt. Tech.'), ('TMT', 'Transport Mgt. Tech.'), ('BCH', 'Biochemistry'), ('BIO', 'Biology'), ('CHE', 'Industrial Chemistry'), ('MCB', 'Microbiology'), ('MTS', 'Mathematical Sci.'), ('PHY', 'Physiology'), ('STA', 'Statistical Sci.')], max_length=50)),
                ('level', models.CharField(choices=[('PDS', 'PDS'), ('UABS', 'UABS'), ('100', '100'), ('200', '200'), ('300', '300')], max_length=5)),
                ('center', models.CharField(choices=[('Apatapiti', 'Apatapiti'), ('Alejolowo', 'Alejolowo'), ('Ibule', 'Ibule'), ('Ilara', 'Ilara'), ('Footprint', 'Footprint'), ('Northgate', 'North Gate')], max_length=25)),
                ('hall', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('Leader', 'Leader'), ('Worker', 'Worker'), ('Member', 'Member')], max_length=7)),
                ('unit', models.CharField(blank=True, max_length=25, null=True, verbose_name='Unit/Office')),
                ('pcgpa', models.FloatField(blank=True, null=True, verbose_name='Previous CGPA')),
                ('pgpa', models.FloatField(blank=True, null=True, verbose_name='Last Session 2nd Semester GPA')),
                ('gpa', models.FloatField(blank=True, null=True, verbose_name='First Semester GPA')),
                ('ccgpa', models.FloatField(blank=True, null=True, verbose_name='Current CGPA')),
                ('mee_score', models.IntegerField(blank=True, null=True, verbose_name='MEE101 Score')),
                ('mts_score', models.IntegerField(blank=True, null=True, verbose_name='MTS101 Score')),
                ('pds_score', models.IntegerField(blank=True, null=True, verbose_name='PDS Score')),
                ('timestamp', models.DateTimeField(auto_now=True)),
            ],
        ),
    ]
